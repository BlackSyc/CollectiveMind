// <auto-generated />
using System;
using CollectiveMind.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CollectiveMind.Data.Migrations
{
    [DbContext(typeof(CollectiveMindContext))]
    [Migration("20210308170258_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("CollectiveMind.Data.Models.Statement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Statement");
                });

            modelBuilder.Entity("StatementStatement", b =>
                {
                    b.Property<Guid>("NegativeArgumentsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PositiveArgumentsId")
                        .HasColumnType("char(36)");

                    b.HasKey("NegativeArgumentsId", "PositiveArgumentsId");

                    b.HasIndex("PositiveArgumentsId");

                    b.ToTable("StatementStatement");
                });

            modelBuilder.Entity("StatementStatement", b =>
                {
                    b.HasOne("CollectiveMind.Data.Models.Statement", null)
                        .WithMany()
                        .HasForeignKey("NegativeArgumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CollectiveMind.Data.Models.Statement", null)
                        .WithMany()
                        .HasForeignKey("PositiveArgumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
